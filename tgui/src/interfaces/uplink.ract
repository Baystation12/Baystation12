<script>
  import { filterMulti } from 'util/filter'
  component.exports = {
    data: {
      filter: ''
    },
    oninit () {
      this.on({
        hover (event) {
          const uses = this.get('data.telecrystals')
          if (uses >= event.context.params.cost)
            this.set('hovered', event.context.params)
        },
        unhover (event) {
          this.set('hovered')
        }
      })
      this.observe('filter', (newkey, oldkey, keypath) => {
        const categories = this.findAll('.display:not(:first-child)')
        filterMulti(categories, this.get('filter').toLowerCase())
      }, { init: false })
    }
  }
</script>

<ui-display title='Uplink' button>
  {{#partial button}}
    {{#if config.fancy}}
      <ui-input value='{{filter}}' placeholder='Filter...'/>
    {{/if}}
    {{#if data.lockable}}
      <ui-button icon='lock' action='lock'>Lock</ui-button>
    {{/if}}
  {{/partial}}
  <ui-section label='Telecrystals' right>
    <span class='{{data.telecrystals > 0 ? "good" : "bad"}}'>{{data.telecrystals}} TC</span>
  </ui-section>
</ui-display>
{{#each data.categories}}
  <ui-display title='{{name}}'>
    {{#each items}}
      <ui-section label='{{name}}' candystripe right>
        <ui-button tooltip='{{name}}: {{desc}}' tooltip-side='left'
          state='{{data.telecrystals < cost || (data.telecrystals - hovered.cost < cost && hovered.item != name) ? "disabled" : null}}'
          action='buy' params='{"category": "{{category}}", "item": {{name}}, "cost": {{cost}}}'
          on-hover='hover' on-unhover='unhover'>{{cost}} TC</ui-button>
      </ui-section>
    {{/each}}
  </ui-display>
{{/each}}
