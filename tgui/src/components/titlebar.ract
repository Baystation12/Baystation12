<script>
import { UI_INTERACTIVE, UI_UPDATE, UI_DISABLED } from 'util/constants'
import { href, winset } from 'util/byond'
import { drag } from 'util/dragresize'

component.exports = {
  computed: {
    visualStatus () {
      switch (this.get('config.status')) {
        case UI_INTERACTIVE: return 'good'
        case UI_UPDATE: return 'average'
        case UI_DISABLED: return 'bad'
        default: return 'bad'
      }
    }
  },
  oninit () {
    const ondrag = drag.bind(this)
    const onrelease = (event) => this.set({ drag: false, x: null, y: null })

    this.observe('config.fancy', (newkey, oldkey, keypath) => {
      winset(this.get('config.window'), 'titlebar', !newkey && this.get('config.titlebar'))

      if (newkey) {
        document.addEventListener('mousemove', ondrag)
        document.addEventListener('mouseup', onrelease)
      } else {
        document.removeEventListener('mousemove', ondrag)
        document.removeEventListener('mouseup', onrelease)
      }
    })

    this.on({
      drag () {
        this.toggle('drag')
      },
      close () {
        winset(this.get('config.window'), 'is-visible', false)
        window.location.href = href({command: `uiclose ${this.get('config.ref')}`}, 'winset')
      },
      minimize () {
        winset(this.get('config.window'), 'is-minimized', true)
      }
    })
  }
}
</script>

{{#if config.titlebar}}
  <header class='titlebar' on-mousedown='drag'>
    <i class='statusicon fa fa-eye fa-2x {{visualStatus}}'></i>
    <span class='title'>{{yield}}</span>
    {{#if config.fancy}}
      <i class='minimize fa fa-minus fa-2x' on-click='minimize'></i>
      <i class='close fa fa-close fa-2x' on-click='close'></i>
    {{/if}}
  </header>
{{/if}}