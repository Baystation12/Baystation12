<script>
  import { UI_INTERACTIVE } from 'util/constants'
  import { act } from 'util/byond'

  component.exports = {
    computed: {
      clickable () {
        if (this.get('enabled') && !this.get('state')) {
          return true
        }
        return false
      },
      enabled () {
        if (this.get('config.status') === UI_INTERACTIVE) {
          return true
        }
        return false
      },
      styles () {
        let extra = ''
        if (this.get('tooltip-side'))
          extra = ` tooltip-${this.get('tooltip-side')}`
        if (this.get('grid'))
          extra += ' gridable'
        if (this.get('enabled')) {
          const state = this.get('state')
          const style = this.get('style')
          if (!state) {
            return `active normal ${style} ${extra}`
          } else {
            return `inactive ${state} ${extra}`
          }
        } else {
          return `inactive disabled ${extra}`
        }
    }
  },
    oninit () {
      this.on('press', (event) => {
        const { action, params } = this.get()
        act(this.get('config.ref'), action, params)
        event.node.blur()
      })
    }
  }
</script>

<span class='button {{styles}}'
  unselectable='on'
  {{#clickable}}tabindex='0'{{/}}
  data-tooltip='{{tooltip}}'
  on-mouseover-mousemove='hover'
  on-mouseleave='unhover'
  on-click-enter='{{#clickable}}press{{/}}'>
  {{#if icon}}
    <i class='fa fa-{{icon}}'></i>
  {{/if}}
  {{yield}}
</span>
